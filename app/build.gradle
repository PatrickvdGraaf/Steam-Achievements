apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'io.fabric'

android {

    androidExtensions {
        experimental = true
    }

    buildToolsVersion '28.0.3'

    buildTypes {
        debug {
            aaptOptions.cruncherEnabled = false
            debuggable true
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileSdkVersion 29

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.crepetete.steamachievements"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "0.0.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'DB_NAME', '"players.db"'

        // An API key can be obtained from https://steamcommunity.com/dev/apikey.
        buildConfigField 'String', 'STEAM_API_KEY', System.getenv('STEAM_API_KEY') ?: STEAM_API_KEY

        /* It's recommended to use your own steam ID, which can be found in your profile URL,
         or with tools like https://steamidfinder.com. */
        buildConfigField 'String', 'TEST_USER_ID', System.getenv('TEST_USER_ID') ?: TEST_USER_ID
    }

    // Specifies one flavor dimension.
    flavorDimensions "version"

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        lintConfig rootProject.file('lint.xml')
    }

    packagingOptions {
        pickFirst 'META-INF/core_release.kotlin_module'
        exclude 'META-INF/*.kotlin_module'
    }

    productFlavors {
        prod {
            dimension "version"

            // Open Source API for steam: https://steamcommunity.com/dev.
            buildConfigField 'String', 'API_URL', '"https://api.steampowered.com"'
        }
    }

    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
}

dependencies {
    def android_chart_version = 'v3.1.0'
    def appcompat_version = '1.1.0'
    def cardview_version = '1.0.0'
    def crashlytics_version = '2.10.1'
    def coroutines_version = '1.3.5'
    def constraint_layout_version = '1.1.3'
    def firebase_core_version = '17.4.3'
    def firebase_pref_version = '19.0.7'
    def fragment_version = '1.3.0-alpha06'
    def glide_version = '4.11.0'
    def graphview_version = '4.2.2'
    def koin_version = '1.0.2'
    def lifecycle_version = '2.2.0'
    def material_version = '1.1.0'
    def okhttp_version = '4.5.0'
    def palette_version = '1.0.0'
    def recyclerview_version = '1.1.0'
    def retrofit_version = '2.8.1'
    def room_version = '2.2.5'
    def timber_version = '4.7.1'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Android
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.cardview:cardview:$cardview_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.palette:palette:$palette_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    // Firebase
    implementation "com.google.firebase:firebase-core:$firebase_core_version"
    implementation "com.google.firebase:firebase-perf:$firebase_pref_version"
    implementation "com.crashlytics.sdk.android:crashlytics:$crashlytics_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Graph Library; http://www.android-graphview.org/download-getting-started/
    implementation "com.jjoe64:graphview:$graphview_version"

    // Koin for Android
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-scope:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    // Material Components
    implementation "com.google.android.material:material:$material_version"

    // Timber Logging
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"// liveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version" // ViewModelScope

    // MPAndroidChart
    implementation "com.github.PhilJay:MPAndroidChart:$android_chart_version"

    // Testing
    testImplementation 'junit:junit:4.13'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.2.2'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.mockito:mockito-core:2.22.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'org.mockito:mockito-core:2.22.0'
    androidTestImplementation 'org.mockito:mockito-android:2.22.0'
}

apply from: '../ktlint.gradle'
check.dependsOn ktlint

apply plugin: 'com.google.gms.google-services'
